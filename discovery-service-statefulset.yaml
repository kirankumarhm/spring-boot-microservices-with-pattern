apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
  labels:
    io.kompose.service: discovery-service
  name: discovery-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: discovery-service
  serviceName: discovery-service #Headless service name
  template:
    metadata:
      labels:
        io.kompose.network/microservice-example-default: "true"
        io.kompose.service: discovery-service
    spec:
      containers:
        - env:
            - name: EUREKA_SERVER_ADDRESS
              value: http://discovery-service-0.discovery-service-tcp.default.svc.cluster.local:8761/eureka
#            - name: EUREKA_CLIENT_REGISTER-WITH-EUREKA
#              value: "false"
#            - name: EUREKA_CLIENT_SERVER-URL_DEFAULT-ZONE
#              value: http://discovery-service:8761/eureka/
            - name: EUREKA_INSTANCE_HOSTNAME
              value: discovery-service
            - name: LOGGING_LEVEL_ROOT
              value: info
            - name: LOGGING_PATTERN_CONSOLE
              value: '%d{dd-MM-yyyy HH:mm:ss} [%-5level] [%file:%line] - %msg%n'
            - name: SERVER_PORT
              value: "8761"
#            - name: SPRING_CLOUD_BOOTSTRAP_ENABLED
#              value: "true"
#            - name: SPRING_CLOUD_KUBERNETES_SECRETS_ENABLEAPI
#              value: "true"
          image: kirankumarhm/discovery-service:0.0.1
#          args: ["--spring.profiles.active=cloud"]
          livenessProbe:
            exec:
              command:
                - curl --fail http://discovery-service:8761/eureka/v2/apps || exit 1
            failureThreshold: 10
            periodSeconds: 30
            timeoutSeconds: 10
          name: discovery-service
          imagePullPolicy: Always
          ports:
            - containerPort: 8761
              hostPort: 8761
              protocol: TCP
          resources: {}
      hostname: discovery-service
      restartPolicy: Always

