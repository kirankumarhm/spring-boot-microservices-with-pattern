apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: axon-server
  name: axon-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: axon-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/microservice-example-default: "true"
        io.kompose.service: axon-server
    spec:
      containers:
        - env:
            - name: AXONIQ_AXONSERVER_DEVMODE_ENABLED
              value: "true"
            - name: AXONIQ_AXONSERVER_HOSTNAME
              value: axon-server
            - name: AXONIQ_AXONSERVER_NAME
              value: axon-server
          image: axoniq/axonserver
          livenessProbe:
            exec:
              command:
                - curl --fail --silent localhost:8024/actuator/health | grep UP || exit 1
            failureThreshold: 10
            periodSeconds: 30
            timeoutSeconds: 10
          name: axon-server
          ports:
            - containerPort: 8024
              hostPort: 8024
              protocol: TCP
            - containerPort: 8124
              hostPort: 8124
              protocol: TCP
            - containerPort: 8224
              hostPort: 8224
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: axon-server-hostpath0
            - mountPath: /eventdata
              name: axon-server-hostpath1
            - mountPath: /config
              name: axon-server-hostpath2
              readOnly: true
      hostname: axon-server
      restartPolicy: Always
      volumes:
        - hostPath:
            path: /tmp/data/axonserver/data
          name: axon-server-hostpath0
        - hostPath:
            path: /tmp/data/axonserver/events
          name: axon-server-hostpath1
        - hostPath:
            path: /tmp/data/axonserver/config
          name: axon-server-hostpath2

